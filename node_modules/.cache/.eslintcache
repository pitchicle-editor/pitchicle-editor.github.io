[{"C:\\Users\\chhch\\Documents\\고등학교 2학년 최현호\\피치클\\pitchicle_online_editor\\src\\index.js":"1","C:\\Users\\chhch\\Documents\\고등학교 2학년 최현호\\피치클\\pitchicle_online_editor\\src\\reportWebVitals.js":"2","C:\\Users\\chhch\\Documents\\고등학교 2학년 최현호\\피치클\\pitchicle_online_editor\\src\\App.js":"3"},{"size":500,"mtime":1645315880479,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1645314702979,"results":"6","hashOfConfig":"5"},{"size":4962,"mtime":1645329267735,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"pefasp",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\Users\\chhch\\Documents\\고등학교 2학년 최현호\\피치클\\pitchicle_online_editor\\src\\index.js",[],[],["19","20"],"C:\\Users\\chhch\\Documents\\고등학교 2학년 최현호\\피치클\\pitchicle_online_editor\\src\\reportWebVitals.js",[],[],"C:\\Users\\chhch\\Documents\\고등학교 2학년 최현호\\피치클\\pitchicle_online_editor\\src\\App.js",["21","22"],[],"import React, { Component } from 'react';\nimport { useState} from 'react';\n\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\nimport { CKEditor } from '@ckeditor/ckeditor5-react'\n\nimport nameList from './nameList.json'\n\nconst editorConfiguration = {\n  toolbar: {\n    items: [\n      'heading',\n      '|',\n      'bold',\n      'italic',\n      // 'underLine',\n      'strikeThrough',\n      // 'subscript',\n      // 'superscript',\n      // 'highlight',\n      '|',\n      // 'fontfamily',\n      // 'fontcolor',\n      // 'fontBackgroundColor',\n      // 'fontSize',\n      // '|',\n      // 'alignment',\n      'link',\n      'bulletedList',\n      'numberedList',\n      'TodoList',\n      '|',\n      'outdent',\n      'indent',\n      '|',\n      // 'imageUpload',\n      'imageInsert',\n      'BlockQuote',\n      'InsertTable',\n      'MediaEmbed',\n      'SpecialCharacters',\n      '|',\n      'undo',\n      'redo',\n      '|',\n      'horizontalLine',\n      'pageBreck',\n      '|',\n      'code',\n      'codeBlock',\n      // '|',\n      // 'TextPartLanguage',\n      '|',\n      'SourceEditing'\n\n      ]\n    },\n    heading: {\n      options: [\n          { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\n          { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },\n          { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },\n          { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },\n          { model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' },\n          { model: 'heading5', view: 'h5', title: 'Heading 5', class: 'ck-heading_heading5' },\n          { model: 'heading6', view: 'h6', title: 'Heading 6', class: 'ck-heading_heading6' },\n    ]\n  }\n};\n\nconst App = () => {\n  // console.log(nameList)\n  const [mdData, setMdData] = useState('')\n  const [tagInput, setTagInput] = useState('')\n\n  const [userData, setUserData] = useState({\n    layout: 'post',\n    title: '',\n    author: '',\n    comments: true,\n    date: '',\n    use_math: true,\n    tags: [],\n\n    context:'',\n    fileName:''\n  })  \n\n  const getValue = e => {\n    const { name, value } = e.target;\n    setUserData({\n      ...userData,\n      [name]: value\n    })\n    console.log(userData)\n  };\n\n  const getTag = e => {\n    setTagInput(e.target.value)\n  }\n\n  const addTag = () => {\n    setUserData({\n      ...userData,\n      tags: [...userData.tags,tagInput]\n    })\n    console.log(userData)\n  };\n\n  const downLoader = () => {\n    let today = new Date()\n\n    let title = userData.title\n\n    if ((title===null)||(title===undefined)||(title==='')){\n      alert('제목이 잘못되었습니다.')\n      return false\n    }\n\n    let fileName = userData.fileName\n\n    if ((fileName===null)||(fileName===undefined)||(fileName==='')){\n      alert('파일이름이 잘못되었습니다.')\n      return false\n    }\n\n\n    let name = nameList[userData.author]\n\n    if ((name===null)||(name===undefined)){\n      alert('저자명이 잘못되었습니다.')\n      return false\n    }\n\n\n    let data =\n`---\nlayout: post\ntitle: ${userData.title}\nauthor: ${name}\ncomments: true\ndate: ${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2,'0')}-${(String(today.getDate()).padStart(2,'0'))} ${(String(today.getHours()).padStart(2,'0'))}:${(String(today.getMinutes()).padStart(2,'0'))}\nuse_math: true\ntags: [computer-science]\n---\n${userData.context}\n`\n    console.log(data)\n    var FileSaver = require('file-saver');\n    var blob = new Blob([data], {type: \"text/plain;charset=utf-8\"});\n    FileSaver.saveAs(blob, `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2,'0')}-${(String(today.getDate()).padStart(2,'0'))}-${userData.fileName}.md`);\n  }\n\n  return (\n      <div className=\"App\">\n          <h2>Pitchicle Online Markdown Editor</h2>\n          <CKEditor\n              editor={ Editor }\n              config={ editorConfiguration }\n              data=\" \"\n              onReady={ editor => {\n                  console.log( '로딩 완료' );\n              } }\n              onChange={ ( event, editor ) => {\n                  const data = editor.getData();\n                  setMdData(data)\n                  console.log( data );\n              } }\n          />\n          <input placeholder='제목' name='title' onChange={getValue} autoComplete='off'/><br/>\n          <input placeholder='파일이름(영어)' name='fileName' onChange={getValue} autoComplete='off'/><br/>\n\n          <input placeholder='저자 ex)홍길동' name='author' onChange={getValue} autoComplete='off'/><br/>\n\n          <input placeholder='태그' onChange={getTag} autoComplete='off'/><button onClick={addTag}>추가</button> {userData.tags.map( data => (data)+' ' )}<br/>\n          <textarea placeholder='본문' onChange={getValue} name='context' autoComplete='off'/><br/>\n          <button onClick={downLoader}>다운로드</button>\n      </div>\n);\n}\n\nexport default App;",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":1,"column":17,"nodeType":"29","messageId":"30","endLine":1,"endColumn":26},{"ruleId":"27","severity":1,"message":"31","line":73,"column":10,"nodeType":"29","messageId":"30","endLine":73,"endColumn":16},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'mdData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]